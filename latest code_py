def evaluate_individual_criteria_v2(llm: AzureOpenAILLM, context: str, second_response: str, 
                                previous_year_data: str, criteria_name: str, criteria_description: str) -> str:
    """
    Enhanced version using 2nd iteration (deduplicated) results to prevent cross-contamination
    """
    
    # Define highly specific and accurate prompts for each criterion using 2nd iteration data
    specific_prompts = {
        "debt_increase": f"""
CRITICAL: Analyze ONLY {criteria_name.upper().replace('_', ' ')} related issues from the DEDUPLICATED red flags below.
IGNORE all other financial problems including revenue, margins, operations, management, etc.

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: From the above deduplicated red flags, identify ONLY debt-related red flags. Be extremely specific.

LOOK FOR THESE EXACT INDICATORS ONLY:
- Total debt increased by specific amounts or percentages
- Long-term debt growth mentioned with numbers
- New borrowings or loan facilities taken
- Debt restructuring that increases overall debt burden
- Interest expenses increased due to higher debt levels

STRICTLY IGNORE: Revenue issues, margin problems, operational costs, working capital changes, provisioning, asset issues, management problems, regulatory issues

CRITERION: {criteria_description}
PREVIOUS YEAR DATA: {previous_year_data}

ANALYSIS INSTRUCTIONS:
1. Search the deduplicated red flags for ONLY debt increase mentions with specific numbers
2. Look for specific debt amounts, percentages, or borrowing activities
3. Classify risk level based on debt increase percentage vs previous year
4. If no specific debt increase data found in the deduplicated flags, mark as Not_Applicable
5. Maximum ONE red flag summary allowed for this criterion

OUTPUT FORMAT:
### Debt Increase Risk Classification
* [Brief summary of the debt increase issue with specific amounts/percentages from deduplicated flags] - High: yes/no, Medium: yes/no, Low: yes/no, Not_Applicable: yes/no

If no debt increase red flags present in deduplicated results, state: "No debt increase red flags identified in deduplicated results."
""",
        
        "provisioning": f"""
CRITICAL: Analyze ONLY {criteria_name.upper().replace('_', ' ')} related issues from the DEDUPLICATED red flags below.
IGNORE all other financial problems including debt, revenue, margins, operations, management, etc.

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: From the above deduplicated red flags, identify ONLY provisioning and write-off red flags. Be extremely specific.

LOOK FOR THESE EXACT INDICATORS ONLY:
- Provisioning for bad debts with specific amounts
- Write-offs mentioned with monetary values
- Impairment charges on assets with amounts
- Credit loss provisions with percentages of EBITDA
- ECL (Expected Credit Loss) provisions

STRICTLY IGNORE: General debt issues, operational problems, revenue declines, margin issues, management problems

CRITERION: {criteria_description}
PREVIOUS YEAR DATA: {previous_year_data}

ANALYSIS INSTRUCTIONS:
1. Search the deduplicated red flags for specific provisioning amounts or write-off values only
2. Calculate percentage of current quarter EBITDA if amounts given
3. Classify based on provisioning as % of EBITDA
4. If no provisioning data found in deduplicated flags, mark as Not_Applicable
5. Maximum ONE red flag summary allowed for this criterion

OUTPUT FORMAT:
### Provisioning Risk Classification
* [Brief summary of the provisioning issue with specific amounts from deduplicated flags] - High: yes/no, Medium: yes/no, Low: yes/no, Not_Applicable: yes/no

If no provisioning red flags present in deduplicated results, state: "No provisioning red flags identified in deduplicated results."
""",

        # Continue with similar patterns for other criteria...
        "asset_decline": f"""
CRITICAL: Analyze ONLY {criteria_name.upper().replace('_', ' ')} related issues from the DEDUPLICATED red flags below.
IGNORE all other financial problems including debt, revenue, margins, provisioning, operations, management, etc.

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: From the above deduplicated red flags, identify ONLY asset value decline red flags. Be extremely specific.

LOOK FOR THESE EXACT INDICATORS ONLY:
- Total assets decreased with specific amounts or percentages
- Fixed asset values declined with numbers
- Asset impairment charges mentioned
- Investment value decreases with amounts
- Property, plant & equipment write-downs

STRICTLY IGNORE: Debt issues, revenue problems, margin compression, provisioning issues, operational problems

CRITERION: {criteria_description}
PREVIOUS YEAR DATA: {previous_year_data}

OUTPUT FORMAT:
### Asset Decline Risk Classification
* [Brief summary of the asset decline issue with specific amounts/percentages from deduplicated flags] - High: yes/no, Medium: yes/no, Low: yes/no, Not_Applicable: yes/no

If no asset decline red flags present in deduplicated results, state: "No asset decline red flags identified in deduplicated results."
""",

        "revenue_decline": f"""
CRITICAL: Analyze ONLY {criteria_name.upper().replace('_', ' ')} related issues from the DEDUPLICATED red flags below.
IGNORE all other financial problems including debt, margins, provisioning, assets, operations, management, etc.

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: From the above deduplicated red flags, identify ONLY revenue decline red flags. Be extremely specific.

LOOK FOR THESE EXACT INDICATORS ONLY:
- Revenue decreased with specific amounts or percentages
- Sales decline mentioned with numbers
- Top-line reduction with comparative figures
- Quarterly/annual revenue comparisons showing decline
- Revenue growth turning negative with percentages

STRICTLY IGNORE: Margin issues, cost problems, profitability (unless specifically revenue decline), debt issues, operational problems

CRITERION: {criteria_description}
PREVIOUS YEAR DATA: {previous_year_data}

OUTPUT FORMAT:
### Revenue Decline Risk Classification
* [Brief summary of the revenue decline issue with specific amounts/percentages from deduplicated flags] - High: yes/no, Medium: yes/no, Low: yes/no, Not_Applicable: yes/no

If no revenue decline red flags present in deduplicated results, state: "No revenue decline red flags identified in deduplicated results."
""",

        "margin_decline": f"""
CRITICAL: Analyze ONLY {criteria_name.upper().replace('_', ' ')} related issues from the DEDUPLICATED red flags below.
IGNORE all other financial problems including debt, revenue (unless margin-related), provisioning, assets, operations, management, etc.

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: From the above deduplicated red flags, identify ONLY margin decline red flags. Be extremely specific.

LOOK FOR THESE EXACT INDICATORS ONLY:
- Gross margin declined with specific percentages
- Operating margin compression with numbers
- EBITDA margin reduction with percentages
- Profit margins decreased with comparative figures
- Margin pressure with specific margin percentages

STRICTLY IGNORE: Revenue issues (unless margin-related), cost increases (unless margin-related), debt issues, operational problems

CRITERION: {criteria_description}
PREVIOUS YEAR DATA: {previous_year_data}

OUTPUT FORMAT:
### Margin Decline Risk Classification
* [Brief summary of the margin decline issue with specific percentages from deduplicated flags] - High: yes/no, Medium: yes/no, Low: yes/no, Not_Applicable: yes/no

If no margin decline red flags present in deduplicated results, state: "No margin decline red flags identified in deduplicated results."
""",

        # Add similar patterns for remaining criteria with second_response instead of fourth_response
    }
    
    # Add a generic template for criteria not explicitly defined above
    generic_template = f"""
CRITICAL: Analyze ONLY {criteria_name.upper().replace('_', ' ')} related issues from the DEDUPLICATED red flags below.
IGNORE all other financial problems.

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: From the above deduplicated red flags, identify red flags related to {criteria_name}. Be extremely specific.

CRITERION: {criteria_description}
PREVIOUS YEAR DATA: {previous_year_data}

ANALYSIS INSTRUCTIONS:
1. Search the deduplicated red flags for specific {criteria_name} indicators only
2. Look for quantitative data and specific examples
3. Classify based on severity and impact
4. If no {criteria_name} data found in deduplicated flags, mark as Not_Applicable
5. Maximum ONE red flag summary allowed for this criterion

OUTPUT FORMAT:
### {criteria_name.title().replace('_', ' ')} Risk Classification
* [Brief summary of the {criteria_name} issue with specific examples from deduplicated flags] - High: yes/no, Medium: yes/no, Low: yes/no, Not_Applicable: yes/no

If no {criteria_name} red flags present in deduplicated results, state: "No {criteria_name.replace('_', ' ')} red flags identified in deduplicated results."
"""

    # Get the specific prompt for this criterion, fallback to generic
    specific_prompt = specific_prompts.get(criteria_name, generic_template)

    full_prompt = f"""You are an expert financial analyst. Analyze the deduplicated red flags with extreme precision.

ORIGINAL CONTEXT:
{context}

DEDUPLICATED RED FLAGS FROM 2ND ITERATION:
{second_response}

TASK: {specific_prompt}

IMPORTANT INSTRUCTIONS:
1. Use ONLY the deduplicated red flags from the 2nd iteration as your source
2. Be extremely specific - only identify red flags that directly match this criterion: {criteria_name}
3. Look for quantitative data, specific amounts, percentages, or ratios in the deduplicated flags
4. Do not count general mentions - only specific indicators with data
5. If no specific data found for this criterion in deduplicated flags, mark as Not_Applicable
6. Avoid duplication - focus only on this specific criterion
7. Maximum ONE red flag summary allowed for this criterion

ANSWER:"""
    
    return llm._call(full_prompt, max_tokens=800)

def process_single_pdf_five_iterations_v2(pdf_path: str, queries_csv_path: str, previous_year_data: str, 
                                         output_folder: str = "results", 
                                         api_key: str = None, azure_endpoint: str = None, 
                                         api_version: str = None, deployment_name: str = "gpt-4.1-mini"):
    """
    Modified version that uses 2nd iteration results for 5th iteration to prevent duplicates
    """
    
    # Create output folder if it doesn't exist
    os.makedirs(output_folder, exist_ok=True)
    
    # Get PDF name without extension
    pdf_name = Path(pdf_path).stem
    
    print(f"\nProcessing: {pdf_name}")
    print("=" * 50)
    
    try:
        # ITERATION 1: Initial red flag identification
        print("Running 1st iteration - Initial Analysis...")
        pipeline_1st = LlamaQueryPipeline(
            pdf_path=pdf_path,
            queries_csv_path=queries_csv_path,
            api_key=api_key,
            azure_endpoint=azure_endpoint,
            api_version=api_version,
            deployment_name=deployment_name
        )
        
        # Run 1st iteration
        first_results_df = pipeline_1st.query_llama(maintain_conversation=True, enable_chaining=False)
        
        # Get first response for chaining
        first_response = first_results_df.iloc[0]['response']
        
        # ITERATION 2: Deduplication and cleanup
        print("Running 2nd iteration - Deduplication...")
        second_prompt = """Remove the duplicates from the above context. Also if the Original Quote and Keyword identifies is same remove them."""
        
        second_full_prompt = f"""You must answer the question strictly based on the below given context.

Context:
{pipeline_1st.docs[0]["context"]}

Previous Analysis: {first_response}

Based on the above analysis and the original context, please answer: {second_prompt}

Answer:"""
        
        second_response = pipeline_1st.llm._call(second_full_prompt, max_tokens=4000)
        
        # ITERATION 3: Categorization of red flags
        print("Running 3rd iteration - Categorization...")
        third_prompt = """You are an expert in financial analysis tasked at categorizing the below identified red flags related to a company's financial health and operations. You need to categorize the red flags into following categories based on their original quotes and the identified keyword.

- Balance Sheet Issues: Red flags related to the company's assets, liabilities, equity, debt and overall financial position.
- P&L (Income Statement) Issues: Red flags related to the company's revenues, expenses, profits, and overall financial performance.
- Liquidity Issues: Concerns related to the company's ability to meet its short-term obligations, such as cash flow problems, debt repayment issues, or insufficient working capital.
- Management and Strategy related Issues: Concerns related to leadership, governance, decision-making processes, overall strategy, vision, and direction.
- Regulatory Issues: Concerns related Compliance with laws, regulations.
- Industry and Market Issues: Concerns related Position within the industry, market trends, and competitive landscape.
- Operational Issues: Concerns related Internal processes, systems, and infrastructure.

While categorizing the red flags strictly adhere to the following guidelines:
1. Please review the below red flags and assign each one to the most relevant category.
2. Do not loose information from the Original Quotes keep them as it is.
3. If a red flag could fit into multiple categories, please assign it to the one that seems most closely related, do not leave any flag unclassified or fit it into multiple categories.
4. While classifying, classify it in a such a way that the flags come under the categories along with their content. Strictly do not create a new category stick to what is mentioned above like an "Additional Red Flags", classify the flags in the above mentioned category only.
5. Do not repeat a category more than once in the output.

**Output Format**:
### Balance Sheet Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

### P&L (Income Statement) Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

### Liquidity Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

### Management and Strategy related Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

### Regulatory Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

### Industry and Market Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

### Operational Issues
- [Red flag 1 with original quote]
- [Red flag 2 with original quote]

Continue this format for all categories, ensuring every red flag from the previous analysis is categorized properly."""
        
        third_full_prompt = f"""You must answer the question strictly based on the below given context.

Context:
{pipeline_1st.docs[0]["context"]}

Previous Analysis: {second_response}

Based on the above analysis and the original context, please answer: {third_prompt}

Answer:"""
        
        third_response = pipeline_1st.llm._call(third_full_prompt, max_tokens=4000)
        
        # ITERATION 4: Detailed summary generation
        print("Running 4th iteration - Summary Generation...")
        fourth_prompt = """Based on the categorized red flags from the previous analysis, provide a comprehensive and detailed summary of each category of red flags in bullet point format. Follow these guidelines:

1. **Retain all information**: Ensure that no details are omitted or lost during the summarization process
2. **Maintain a neutral tone**: Present the summary in a factual and objective manner, avoiding any emotional or biased language
3. **Focus on factual content**: Base the summary solely on the information associated with each red flag, without introducing external opinions or assumptions
4. **Include all red flags**: Incorporate every red flag within the category into the summary, without exception
5. **Balance detail and concision**: Provide a summary that is both thorough and concise, avoiding unnecessary elaboration while still conveying all essential information
6. **Incorporate quantitative data**: Wherever possible, include quantitative data and statistics to support the summary and provide additional context
7. **Category-specific content**: Ensure that the summary is generated based solely on the content present within each category
8. **Summary should be factual**: Avoid any subjective interpretations or opinions
9. **Use bullet points**: Each red flag should be summarized as a separate bullet point with key details and data points

Format the output exactly like this example:
### Balance Sheet Issues
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]
* [Summary of red flag 3 with specific data points and factual information]

### P&L (Income Statement) Issues  
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]
* [Summary of red flag 3 with specific data points and factual information]

### Liquidity Issues
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]

### Management and Strategy related Issues
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]

### Regulatory Issues
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]

### Industry and Market Issues
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]

### Operational Issues
* [Summary of red flag 1 with specific data points and factual information]
* [Summary of red flag 2 with specific data points and factual information]

Continue this format for all 7 categories. Each bullet point should be a concise summary that captures the key details of each red flag within that category, including relevant quantitative data where available."""
        
        fourth_full_prompt = f"""You must answer the question strictly based on the below given context.

Context:
{pipeline_1st.docs[0]["context"]}

Previous Analysis: {third_response}

Based on the above analysis and the original context, please answer: {fourth_prompt}

Answer:"""
        
        fourth_response = pipeline_1st.llm._call(fourth_full_prompt, max_tokens=4000)
        
        # ITERATION 5: Individual Risk Classification using 2ND ITERATION RESULTS
        print("Running 5th iteration - Individual Criteria Risk Classification (using 2nd iteration deduplicated results)...")
        
        criteria_definitions = {
            "debt_increase": "High: Debt increase by >=40% compared to previous reported b/s number; Medium: Debt increase between 25 to 40% compared to previous reported b/s number; Low: Debt increase is less than 25% compared to previous reported b/s number",
            "provisioning": "High: provisioning or write-offs more than 25% of current quarter's EBIDTA; Medium: provisioning or write-offs between 10 to 25% of current quarter's EBIDTA; Low: provisioning or write-offs less than 10% of current quarter's EBIDTA",
            "asset_decline": "High: Asset value falls by >=40% compared to previous reported b/s number; Medium: Asset value falls between 25% to 40% compared to previous reported b/s number; Low: Asset value falls by less than 25% compared to previous reported b/s number",
            "receivable_days": "High: receivable days increase by >=40% compared to previous reported b/s number; Medium: receivable days increase between 25 to 40% compared to previous reported b/s number; Low: receivable days increase is less than 25% compared to previous reported b/s number",
            "payable_days": "High: payable days increase by >=40% compared to previous reported b/s number; Medium: payable days increase between 25 to 40% compared to previous reported b/s number; Low: payable days increase is less than 25% compared to previous reported b/s number",
            "debt_ebitda": "High: Debt/EBITDA > 4x; Medium: Debt/EBITDA 2-4x; Low: Debt/EBITDA < 2x",
            "revenue_decline": "High: revenue or profitability falls by >=25% compared to previous reported quarter number; Medium: revenue or profitability falls between 10% to 25% compared to previous reported quarter number; Low: revenue or profitability falls by less than 10% compared to previous reported quarter number",
            "onetime_expenses": "High: one-time expenses or losses more than 25% of current quarter's EBIDTA; Medium: one-time expenses or losses between 10 to 25% of current quarter's EBIDTA; Low: one-time expenses or losses less than 10% of current quarter's EBIDTA",
            "margin_decline": "High: gross margin or operating margin falling more than 25% compared to previous reported quarter number; Medium: gross margin or operating margin falling between 10 to 25% compared to previous reported quarter number; Low: gross margin or operating margin falling less than 10% compared to previous reported quarter number",
            "cash_balance": "High: cash balance falling more than 25% compared to previous reported b/s number; Medium: cash balance falling between 10 to 25% compared to previous reported b/s number; Low: cash balance falling less than 10% compared to previous reported b/s number",
            "short_term_debt": "High: Short-term debt or current liabilities increase by >=40% compared to previous reported b/s number; Medium: Short-term debt or current liabilities increase between 25 to 40% compared to previous reported b/s number; Low: Short-term debt or current liabilities increase is less than 25% compared to previous reported b/s number",
            "management_issues": "High: Any management turnover or key personnel departures, Poor track record of execution or delivery, High employee attrition rates; Low: No management turnover or key personnel departures, Strong track record of execution or delivery, Low employee attrition rates",
            "regulatory_compliance": "High: if found any regulatory issues as a concern or a conclusion of any discussion related to regulatory issues or warning(s) from the regulators ;Low: if there is a no clear concern for the company basis the discussion on the regulatory issues ",
            "market_competition": "High: Any competitive intensity or new entrants, Any decline in market share; Low: Low competitive intensity or new entrants, Stable or increasing market share",
            "operational_disruptions": "High: : if found any operational or supply chain issues as a concern or a conclusion of any discussion related to operational issues ; Low: if there is a no clear concern for the company basis the discussion on the operational or supply chain issues "
        }
        
        # Process each criterion individually using 2nd iteration results
        individual_risk_results = {}
        high_risk_summaries = set()  # Global set to track unique high-risk summaries
        total_counts = {'High': 0, 'Medium': 0, 'Low': 0}
        fifth_results = []
        
        for criteria_name, criteria_description in criteria_definitions.items():
            print(f"Evaluating criterion: {criteria_name} (using 2nd iteration deduplicated results)")
            
            # Get individual criterion response using 2ND ITERATION RESULTS
            criterion_response = evaluate_individual_criteria_v2(
                llm=pipeline_1st.llm,
                context=pipeline_1st.docs[0]["context"],
                second_response=second_response,  # Using 2nd iteration instead of 4th
                previous_year_data=previous_year_data,
                criteria_name=criteria_name,
                criteria_description=criteria_description
            )
            
            # Parse this individual response
            individual_risk_data = parse_individual_criterion_response(criterion_response, criteria_name)
            individual_risk_results[criteria_name] = individual_risk_data
            
            # Store individual results for detailed breakdown
            fifth_results.append({
                "criteria": criteria_name,
                "description": criteria_description,
                "classification_response": criterion_response,
                "parsed_data": individual_risk_data,
                "source_iteration": "2nd (deduplicated)"  # Track source
            })
            
            # Aggregate unique high-risk summaries
            for summary in individual_risk_data.get('High', []):
                summary_clean = summary.strip()
                if summary_clean:  # Only add non-empty summaries
                    high_risk_summaries.add(summary_clean)
            
            # Aggregate counts
            for risk_level in ['High', 'Medium', 'Low']:
                total_counts[risk_level] += individual_risk_data['counts'].get(risk_level, 0)
            
            time.sleep(1)  # API rate limiting
        
        print(f"\n=== FINAL DEDUPLICATION SUMMARY (Using 2nd Iteration Source) ===")
        print(f"Total unique high-risk summaries: {len(high_risk_summaries)}")
        print(f"Total high-risk count: {total_counts['High']}")
        print(f"High-risk summaries: {list(high_risk_summaries)}")
        print("=" * 50)
        
        # Combine results
        risk_data = {
            'High': list(high_risk_summaries),
            'Medium': [],
            'Low': [],
            'counts': total_counts,
            'individual_results': individual_risk_results  # Keep detailed breakdown
        }
        
        # Extract company information from first page
        print("Extracting company information...")
        company_info = extract_company_info_from_pdf(pdf_path, pipeline_1st.llm)
        print(f"Identified company: {company_info}")
        
        # Parse summary by categories
        print("Parsing summary by categories...")
        summary_by_categories = parse_summary_by_categories(fourth_response)
        
        # Create Word document
        print("Creating Word document...")
        word_doc_path = create_word_document(
            pdf_name=pdf_name,
            company_info=company_info,
            risk_data=risk_data,
            summary_by_categories=summary_by_categories,
            output_folder=output_folder
        )
        
        # Save all results together
        timestamp = time.strftime("%Y%m%d_%H%M%S")
        all_results = pd.DataFrame({
            "pdf_name": [pdf_name, pdf_name, pdf_name, pdf_name, pdf_name],
            "iteration": [1, 2, 3, 4, 5],
            "stage": [
                "Initial Analysis",
                "Deduplication",
                "Categorization",
                "Summary Generation",
                "Individual Criteria Risk Classification (using 2nd iteration)"
            ],
            "prompt": [
                first_results_df.iloc[0]['query'],  # Original query from 1st iteration
                second_prompt,
                third_prompt,
                fourth_prompt,
                "Individual Risk Classification for 15 criteria using 2nd iteration deduplicated results"
            ],
            "response": [
                first_response,
                second_response,
                third_response,
                fourth_response,
                f"Individual results processed using 2nd iteration source - see detailed breakdown file"
            ],
            "timestamp": [timestamp, timestamp, timestamp, timestamp, timestamp]
        })
        
        # Save complete results
        complete_output_file = os.path.join(output_folder, f"{pdf_name}_complete_5iteration_pipeline_results_v2.csv")
        all_results.to_csv(complete_output_file, index=False)
        
        # Save individual risk classification results with detailed breakdown
        detailed_risk_df = pd.DataFrame(fifth_results)
        detailed_risk_output_file = os.path.join(output_folder, f"{pdf_name}_detailed_risk_classification_v2.csv")
        detailed_risk_df.to_csv(detailed_risk_output_file, index=False)
        
        print(f"Complete 5-iteration pipeline finished for {pdf_name}!")
        print(f"CSV Results saved to: {complete_output_file}")
        print(f"Detailed risk classification saved to: {detailed_risk_output_file}")
        print(f"Word document saved to: {word_doc_path}")
        
        return all_results
        
    except Exception as e:
        print(f"Error processing {pdf_name}: {str(e)}")
        # Save error log
        error_df = pd.DataFrame({
            "pdf_name": [pdf_name],
            "error": [str(e)],
            "timestamp": [time.strftime("%Y%m%d_%H%M%S")]
        })
        error_file = os.path.join(output_folder, f"{pdf_name}_error_log.csv")
        error_df.to_csv(error_file, index=False)
        return None
